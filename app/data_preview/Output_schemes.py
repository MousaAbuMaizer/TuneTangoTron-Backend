from typing import List
from langchain_core.pydantic_v1 import BaseModel, Field, validator


class LangChainSchema(BaseModel):
    SystemMessage: str = Field(
        description="Describes the MAIN ROLE and behavior or action or the tone performed by the AI system"
    )
    HumanMessage: str = Field(
        description="Represents a message sent by a user seeking information, clarification, or engaging in conversation."
    )
    AssistantMessage: str = Field(
        description="Represents a response generated by the AI assistant in reply to a user's query or input."
    )


class Message(BaseModel):
    role: str = Field(
        ...,
        description="The role of the message sender. Possible values: 'system', 'user', 'assistant'. "
                    "The 'system' role represents messages generated by the system. "
                    "The 'user' role represents messages sent by the user. "
                    "The 'assistant' role represents messages generated by the assistant."
    )

    content: str = Field(
        ...,
        description="The content of the message. "
                    "For 'system' and 'assistant' roles, this field contains informative text or responses. "
                    "For 'user' role, this field contains questions or inputs from the user."
    )


class ChatgptSchema(BaseModel):
    messages: List[Message] = Field(
        description="A list of messages exchanged in the conversation. "
                    "Each conversation is represented as a sequence of messages. "
                    "Each message contains a sender role ('system', 'user', 'assistant') "
                    "and the corresponding message content. "
                    "Conversations are separated by distinct messages from the 'system' role."
    )
